/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  StudentManagement,
  StudentManagementInterface,
} from "../StudentManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_index",
        type: "uint8",
      },
      {
        internalType: "enum StudentManagement.Status",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "change_student_status",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delete_student",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "get_student",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "age",
            type: "uint8",
          },
          {
            internalType: "enum StudentManagement.Gender",
            name: "gender",
            type: "uint8",
          },
          {
            internalType: "enum StudentManagement.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct StudentManagement.Student",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_students",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "age",
            type: "uint8",
          },
          {
            internalType: "enum StudentManagement.Gender",
            name: "gender",
            type: "uint8",
          },
          {
            internalType: "enum StudentManagement.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct StudentManagement.Student[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_age",
        type: "uint8",
      },
      {
        internalType: "enum StudentManagement.Gender",
        name: "_gender",
        type: "uint8",
      },
    ],
    name: "register_student",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_age",
        type: "uint8",
      },
      {
        internalType: "enum StudentManagement.Gender",
        name: "_gender",
        type: "uint8",
      },
      {
        internalType: "enum StudentManagement.Status",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "update_student",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b5061142e806100246000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806337357b3a146100675780633f09a53814610097578063a9189b0c146100b3578063ccd693e0146100d1578063f4245620146100ed578063fdb14e9814610109575b600080fd5b610081600480360381019061007c9190610939565b610125565b60405161008e9190610b56565b60405180910390f35b6100b160048036038101906100ac9190610939565b6102e3565b005b6100bb6103b1565b6040516100c89190610cb0565b60405180910390f35b6100eb60048036038101906100e69190610e7d565b61053f565b005b61010760048036038101906101029190610f14565b610651565b005b610123600480360381019061011e9190610f54565b6106fb565b005b61012d61083c565b6001808054905061013e9190610ff2565b821115610180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017790611083565b60405180910390fd5b60018281548110610194576101936110a3565b5b90600052602060002090600302016040518060a0016040529081600082015481526020016001820180546101c790611101565b80601f01602080910402602001604051908101604052809291908181526020018280546101f390611101565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660ff1660ff1681526020016002820160019054906101000a900460ff16600181111561028b5761028a610a21565b5b600181111561029d5761029c610a21565b5b81526020016002820160029054906101000a900460ff1660028111156102c6576102c5610a21565b5b60028111156102d8576102d7610a21565b5b815250509050919050565b600180805490506102f49190610ff2565b8114610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032c90611083565b60405180910390fd5b60018181548110610349576103486110a3565b5b90600052602060002090600302016000808201600090556001820160006103709190610892565b6002820160006101000a81549060ff02191690556002820160016101000a81549060ff02191690556002820160026101000a81549060ff0219169055505050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561053657838290600052602060002090600302016040518060a00160405290816000820154815260200160018201805461041290611101565b80601f016020809104026020016040519081016040528092919081815260200182805461043e90611101565b801561048b5780601f106104605761010080835404028352916020019161048b565b820191906000526020600020905b81548152906001019060200180831161046e57829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660ff1660ff1681526020016002820160019054906101000a900460ff1660018111156104d6576104d5610a21565b5b60018111156104e8576104e7610a21565b5b81526020016002820160029054906101000a900460ff16600281111561051157610510610a21565b5b600281111561052357610522610a21565b5b81525050815260200190600101906103d5565b50505050905090565b8360018681548110610554576105536110a3565b5b9060005260206000209060030201600101908161057191906112de565b508260018681548110610587576105866110a3565b5b906000526020600020906003020160020160006101000a81548160ff021916908360ff16021790555081600186815481106105c5576105c46110a3565b5b906000526020600020906003020160020160016101000a81548160ff021916908360018111156105f8576105f7610a21565b5b02179055508060018681548110610612576106116110a3565b5b906000526020600020906003020160020160026101000a81548160ff0219169083600281111561064557610644610a21565b5b02179055505050505050565b600180805490506106629190610ff2565b8260ff1611156106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90611083565b60405180910390fd5b8060018360ff16815481106106bf576106be6110a3565b5b906000526020600020906003020160020160026101000a81548160ff021916908360028111156106f2576106f1610a21565b5b02179055505050565b60006040518060a0016040528060005481526020018581526020018460ff16815260200183600181111561073257610731610a21565b5b81526020016000600281111561074b5761074a610a21565b5b8152509050600181908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101908161079b91906112de565b5060408201518160020160006101000a81548160ff021916908360ff16021790555060608201518160020160016101000a81548160ff021916908360018111156107e8576107e7610a21565b5b021790555060808201518160020160026101000a81548160ff0219169083600281111561081857610817610a21565b5b02179055505050600080815480929190610831906113b0565b919050555050505050565b6040518060a001604052806000815260200160608152602001600060ff1681526020016000600181111561087357610872610a21565b5b81526020016000600281111561088c5761088b610a21565b5b81525090565b50805461089e90611101565b6000825580601f106108b057506108cf565b601f0160209004906000526020600020908101906108ce91906108d2565b5b50565b5b808211156108eb5760008160009055506001016108d3565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61091681610903565b811461092157600080fd5b50565b6000813590506109338161090d565b92915050565b60006020828403121561094f5761094e6108f9565b5b600061095d84828501610924565b91505092915050565b61096f81610903565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109af578082015181840152602081019050610994565b60008484015250505050565b6000601f19601f8301169050919050565b60006109d782610975565b6109e18185610980565b93506109f1818560208601610991565b6109fa816109bb565b840191505092915050565b600060ff82169050919050565b610a1b81610a05565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610a6157610a60610a21565b5b50565b6000819050610a7282610a50565b919050565b6000610a8282610a64565b9050919050565b610a9281610a77565b82525050565b60038110610aa957610aa8610a21565b5b50565b6000819050610aba82610a98565b919050565b6000610aca82610aac565b9050919050565b610ada81610abf565b82525050565b600060a083016000830151610af86000860182610966565b5060208301518482036020860152610b1082826109cc565b9150506040830151610b256040860182610a12565b506060830151610b386060860182610a89565b506080830151610b4b6080860182610ad1565b508091505092915050565b60006020820190508181036000830152610b708184610ae0565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060a083016000830151610bbc6000860182610966565b5060208301518482036020860152610bd482826109cc565b9150506040830151610be96040860182610a12565b506060830151610bfc6060860182610a89565b506080830151610c0f6080860182610ad1565b508091505092915050565b6000610c268383610ba4565b905092915050565b6000602082019050919050565b6000610c4682610b78565b610c508185610b83565b935083602082028501610c6285610b94565b8060005b85811015610c9e5784840389528151610c7f8582610c1a565b9450610c8a83610c2e565b925060208a01995050600181019050610c66565b50829750879550505050505092915050565b60006020820190508181036000830152610cca8184610c3b565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d14826109bb565b810181811067ffffffffffffffff82111715610d3357610d32610cdc565b5b80604052505050565b6000610d466108ef565b9050610d528282610d0b565b919050565b600067ffffffffffffffff821115610d7257610d71610cdc565b5b610d7b826109bb565b9050602081019050919050565b82818337600083830152505050565b6000610daa610da584610d57565b610d3c565b905082815260208101848484011115610dc657610dc5610cd7565b5b610dd1848285610d88565b509392505050565b600082601f830112610dee57610ded610cd2565b5b8135610dfe848260208601610d97565b91505092915050565b610e1081610a05565b8114610e1b57600080fd5b50565b600081359050610e2d81610e07565b92915050565b60028110610e4057600080fd5b50565b600081359050610e5281610e33565b92915050565b60038110610e6557600080fd5b50565b600081359050610e7781610e58565b92915050565b600080600080600060a08688031215610e9957610e986108f9565b5b6000610ea788828901610924565b955050602086013567ffffffffffffffff811115610ec857610ec76108fe565b5b610ed488828901610dd9565b9450506040610ee588828901610e1e565b9350506060610ef688828901610e43565b9250506080610f0788828901610e68565b9150509295509295909350565b60008060408385031215610f2b57610f2a6108f9565b5b6000610f3985828601610e1e565b9250506020610f4a85828601610e68565b9150509250929050565b600080600060608486031215610f6d57610f6c6108f9565b5b600084013567ffffffffffffffff811115610f8b57610f8a6108fe565b5b610f9786828701610dd9565b9350506020610fa886828701610e1e565b9250506040610fb986828701610e43565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ffd82610903565b915061100883610903565b92508282039050818111156110205761101f610fc3565b5b92915050565b600082825260208201905092915050565b7f53747564656e7420646f6573206e6f7420657869747300000000000000000000600082015250565b600061106d601683611026565b915061107882611037565b602082019050919050565b6000602082019050818103600083015261109c81611060565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061111957607f821691505b60208210810361112c5761112b6110d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611157565b61119e8683611157565b95508019841693508086168417925050509392505050565b6000819050919050565b60006111db6111d66111d184610903565b6111b6565b610903565b9050919050565b6000819050919050565b6111f5836111c0565b611209611201826111e2565b848454611164565b825550505050565b600090565b61121e611211565b6112298184846111ec565b505050565b5b8181101561124d57611242600082611216565b60018101905061122f565b5050565b601f8211156112925761126381611132565b61126c84611147565b8101602085101561127b578190505b61128f61128785611147565b83018261122e565b50505b505050565b600082821c905092915050565b60006112b560001984600802611297565b1980831691505092915050565b60006112ce83836112a4565b9150826002028217905092915050565b6112e782610975565b67ffffffffffffffff811115611300576112ff610cdc565b5b61130a8254611101565b611315828285611251565b600060209050601f8311600181146113485760008415611336578287015190505b61134085826112c2565b8655506113a8565b601f19841661135686611132565b60005b8281101561137e57848901518255600182019150602085019450602081019050611359565b8683101561139b5784890151611397601f8916826112a4565b8355505b6001600288020188555050505b505050505050565b60006113bb82610903565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113ed576113ec610fc3565b5b60018201905091905056fea264697066735822122027d902e0aef251574193f5d7e40657e4e67cfe9512fe4f2ae5f5f2ad9764f69b64736f6c63430008140033";

type StudentManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StudentManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StudentManagement__factory extends ContractFactory {
  constructor(...args: StudentManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StudentManagement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StudentManagement__factory {
    return super.connect(runner) as StudentManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StudentManagementInterface {
    return new Interface(_abi) as StudentManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StudentManagement {
    return new Contract(address, _abi, runner) as unknown as StudentManagement;
  }
}
